version: '3.8'

services:
  n8n:
    # Use official n8n image from Docker Hub
    image: docker.n8n.io/n8nio/n8n:latest
    restart: unless-stopped
    environment:
      # Basic Authentication
      - N8N_BASIC_AUTH_ACTIVE=true
      - N8N_BASIC_AUTH_USER=admin
      - N8N_BASIC_AUTH_PASSWORD=password
      # Database Configuration
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgres
      - DB_POSTGRESDB_DATABASE=n8n
      - DB_POSTGRESDB_USER=n8n
      - DB_POSTGRESDB_PASSWORD=n8n_password
      - DB_POSTGRESDB_SCHEMA=public
      # n8n Configuration
      - N8N_PORT=5678
      - NODE_ENV=production
      - GENERIC_TIMEZONE=UTC
      - TZ=UTC
      # Allow external npm modules
      - NODE_FUNCTION_ALLOW_EXTERNAL=*
    ports:
      - "5678:5678"
    volumes:
      # IMPORTANT: Persist n8n data including encryption keys
      - n8n_data:/home/node/.n8n
    depends_on:
      - postgres
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:5678/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  postgres:
    image: postgres:14-alpine
    restart: unless-stopped
    environment:
      - POSTGRES_DB=n8n
      - POSTGRES_USER=n8n
      - POSTGRES_PASSWORD=n8n_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U n8n"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  n8n_data:
  postgres_data:
